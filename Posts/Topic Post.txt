﻿[img="https://raw.githubusercontent.com/TheRealDannyyy/Construct-Nwjs-Roundup/master/Assets/Images/NwjsroundupGitHub.png"]

[tabgroup]
[tab title="Topic Overview"]
[h1]Table Of Contents[/h1]
[b]Getting Started[/b]
[ul]
[li]Installing & Updating[/li]
[li]The Use Of Custom Builds[/li][/ul]
[b]Main Structure[/b]
[ul]
[li]Important Files & File Paths[/li]
[li]How To: Modify The Package Manifest Files[/li]
[li]How To: Add Chromium-Args & Js-flags[/li][/ul]
[b]Bugfixes & Workarounds[/b]
[ul]
[li]How To: Workaround Steam Overlay Not Refreshing[/li]
[li]How To: Workaround Steam Overlay Not Appearing[/li]
[li]How To: Workaround Steam Overlay Rendering Above Window Title Bar[/li]
[li]How To: Workaround Steam Overlay Issues With Letterbox Scaling[/li]
[li]How To: Force GC To Instantly Unload Audio From Memory[/li]
[li]How To: Workaround incorrect window size[/li]
[li]How To: Workaround Game Canvas Not Rendering At All[/li][/ul]
[b]Custom Features & Debugging Tools[/b]
[ul]
[li]How To: Speed Up The Startup Time Of Your Game[/li]
[li]How To: Set Your Own Application Icon[/li]
[li]How To: Hide/Prevent Chrome Devtools For The End-User[/li]
[li]How To: Test Your Game On Higher Framerates Than 60FPS[/li]
[li]How To: Use The Built-in NW.js FPS Counter[/li]
[li]How To: Modify/Remove Right-Click Context Menus[/li]
[li]How To: Fetch & Make Use Of Command-line Arguments[/li][/ul]
[b]References[/b]
[ul]
[li]Helpful Links[/li]
[li]External Bugreports[/li][/ul]
[/tab]

[tab title="NW.js - Basics"]
[h1]Getting Started[/h1]
[h3]Installing & Updating[/h3]
All NWjs related files can be downloaded from [url=https://www.scirra.com/nwjs]THIS[/url] website. The installer will do the job for you and install all the necessary files and runtime components you need.

[h3]The Use Of Custom Builds[/h3]
If you don't want to wait for the latest stable NWjs installer or would like to test out the latest experimental builds of NWjs, you also have the option to visit [url=https://nwjs.io/downloads/]THIS[/url] website and do everything on your own.

[h1]Main Structure[/h1]
[h3]Important Files & File Paths[/h3]
[ul]
	[li][b]NWjsForC2 Source Folder [i](C:\Program Files\NWjsForC2)[/i]:[/b][/li]
[/ul]
Here you can find all the base files that C2 uses for the export. This is also the path where you have to paste in any custom builds if you decided to use them.

[ul]
	[li][b]C2 Folder For NWjs Files [i](...\Construct2\Construct2-Win...\exporters\html5\nwjs)[i]:[/b][/li]
[/ul]
This path holds important ".json" files and usually 2 folders "win32" and "win64" with images inside.

[ul]
	[li][b]"package.json" & "package-win.json" [i](...\Construct2\Construct2-Win...\exporters\html5\nwjs)[/i]:[/b][/li]
[/ul]
These json files contain important commands that the exported version of NWjs can make use of. It's recommened not to add any debugging related "Chromium-Args" in those files.

[ul]
	[li][b]"package-preview.json" [i](...\Construct2\Construct2-Win...\exporters\html5\nwjs)[/i]:[/b][/li]
[/ul]
This json manifest for NWjs is only being used while previewing your games inside Construct 2. It's recommended to add all the debugging related "Chromium-Args" in this file only.

[h3]How To: Modify The Package Manifest Files[/h3]
A common misconception is that you're required to edit the package manifest files for each export but that's not the case! Since Construct 2 is just copying the package.json files, it's easier to directly edit the source files. 

[tip]These files can be found inside [b]C2's Folder For NWjs Files[/b].[/tip]

[h3]How To: Add Chromium-Args & Js-flags[/h3]
The majority of features or bugfixes found in this topic will require chromium-args or js-flags to be added to the package manifest files manually. Below you will find examples on how to do it. 

[tip]Did something wrong? [url=https://github.com/TheRealDannyyy/Construct-Nwjs-Roundup/raw/master/Assets/Package%20Files/NwjsPackageFiles.zip]HERE[/url] are all files as they come with Construct 2.[/tip]

[b]Steps To Add Chromium-Args To Package.json File(s):[/b]
[ol]
[li] Open the "package.json" file(s)[/li]
[li] Find the "chromium-args" property[/li]
[li] Add a Chromium-Arg with 1 empty space in between other args ([url=https://raw.githubusercontent.com/TheRealDannyyy/Construct-Nwjs-Roundup/master/Assets/Images/Default%2BArg.PNG]Example ➚[/url])[/li][/ol]

[b]Steps To Add JS-Flags To Package.json File(s):[/b]
[ol]
[li] Open the "package.json" file(s)[/li]
[li] Find the "js-flags" property (add it if it's not there, example in next step)[/li]
[li] Add a JS-Flag with 1 empty space in between other flags ([url=https://raw.githubusercontent.com/TheRealDannyyy/Construct-Nwjs-Roundup/master/Assets/Images/Default%2BJSFlag.PNG]Example ➚[/url])[/li][/ol]
[/tab]

[tab title="NW.js - Workarounds"]
[h1]Bugfixes & Workarounds[/h1]
[h3]How To: Workaround Steam Overlay Not Refreshing[/h3]
The Steam Overlay feels unresponsive, fails to refresh displayed content correctly.
[warning]This is an optional workaround and most games probably won't require this at all.[/warning]

[b]Steps To Add/Fix/Workaround:[/b]
[ol]
[li] Add a small 2x2 sprite into one of your layouts (e.g. loader layout)[/li]
[li] Add a movement behavior like [i]rotate[/i][/li]
[li] Set the sprite opacity to 0% and make it global[/li][/ol][hr]

[h3]How To: Workaround Steam Overlay Not Appearing[/h3]
The Steam Overlay doesn't appear at all or certain features aren't working.
[warning]The workaround has been tested using [b]NW.js v0.42.0[/b] and might not work with older versions.[/warning]

[b]Steps To Add/Fix/Workaround:[/b]
[ol]
[li] Open the "package.json" file(s)[/li]
[li] Add [b]--in-process-gpu[/b] to the "chromium-args" properties[/li][/ol][hr]

[h3]How To: Workaround Steam Overlay Rendering Above Window Title Bar[/h3]
The Steam Overlay renders above the window title bar on Windows 10.
[warning]This workaround is only required for [b]NW.js v0.44.2[/b] and newer.[/warning]

[b]Steps To Add/Fix/Workaround:[/b]
[ol]
[li] Open the "package.json" file(s)[/li]
[li] Add [b]--disable-windows10-custom-titlebar[/b] to the "chromium-args" properties[/li][/ol][hr]

[h3]How To: Workaround Steam Overlay Issues With Letterbox Scaling[/h3]
The Steam Overlay doesn't scale correctly on games with letterbox scaling enabled. Black bars around the game canvas glitch out, still display the Overlay.
[tip]It's recommended to [b]refresh for at least 2-3sec[/b] after closing/opening the Steam Overlay.[/tip]

[b]Steps To Add/Fix/Workaround:[/b]
[ol]
[li] Download and install [url=https://github.com/TheRealDannyyy/Construct-Nwjs-Roundup/raw/master/Assets/Force%20Redraw/ForceRedraw.c2addon]THIS[/url] plugin[/li]
[li] Use redraw action after closing/opening the Steam Overlay[/li][/ol][hr]

[h3]How To: Force GC To Instantly Unload Audio From Memory[/h3]
Garbage Collector is not doing the job and bloats memory usage.
[tip][url=https://github.com/TheRealDannyyy/Construct-Nwjs-Roundup/raw/master/Assets/Force%20Unload/Force%20Unload.capx]HERE[/url] is an example to test it. Use Windows Task Manager for debugging.[/tip]

[b]Steps To Add/Fix/Workaround:[/b]
[ol]
[li] Open the "package.json" file(s)[/li]
[li] Add [b]--expose-gc[/b] to the "js-flags" properties[/li]
[li] Execute the following JS code using the browser plugin:[/li][/ol]

[code lang="javascript"]"global.gc();"[/code][hr]

[h3]How To: Workaround incorrect window size[/h3]
NWjs doesn't start with the correct window size, often resulting in unexpected letterboxing.
[warning]Might not be required for NWjs releases starting from [b]v0.43.0 (NW2)[/b].[/warning]

[b]Steps To Add/Fix/Workaround:[/b]
[ol]
[li] Add the [i]browser[/i] plugin to your project[/li]
[li] Select an event which only triggers once (e.g. inside the loader layout)[/li]
[li] Add the browser action [i]execute javascript[/i][/li]
[li] Execute the following code:[/li][/ol]

Construct 2:
[code lang="javascript"]"if (!(this.runtime.firstInFullscreen || window['innerWidth'] === this.runtime.original_width && window['innerHeight'] === this.runtime.original_height))
{
 var dh = Math.floor(this.runtime.original_height - window['innerHeight']);
 var dw = Math.floor(this.runtime.original_width - window['innerWidth']);

 window['resizeBy'](dw, dh);
 console.log('Resized window by w: ' + dw + ', h: ' + dh);
}
else
{
 console.log('No window resize was required!');
}"[/code]

Construct 3:
[code lang="javascript"]"var cm = this._runtime._canvasManager;
var rt = this._runtime;
if (!(cm.IsDocumentFullscreen() || cm._windowInnerWidth === rt._originalViewportWidth && cm._windowInnerHeight === rt._originalViewportHeight))
{
 var dh = Math.floor(rt._originalViewportHeight - window['innerHeight']);
 var dw = Math.floor(rt._originalViewportWidth - window['innerWidth']);

 window['resizeBy'](dw, dh);
 console.log('Resized window by w: ' + dw + ', h: ' + dh);
}
else
{
 console.log('No window resize was required!');
}"[/code]
[i](Code provided by [@Colludium].)[/i][hr]

[h3]How To: Workaround Game Canvas Not Rendering At All[/h3]
The game starts and runs fine but the canvas is black.
[warning]This might slightly decrease game performance. Only use if necesarry.[/warning]

[b]Steps To Add/Fix/Workaround:[/b]
[ol]
[li] Open the "package.json" file(s)[/li]
[li] Add [b]--disable-direct-composition[/b] to the "chromium-args" properties[/li][/ol]
[/tab]

[tab title="NW.js - Features"]
[h1]Custom Features & Debugging Tools [/h1]
[h3]How To: Speed Up The Startup Time Of Your Game[/h3]
The game takes a long time to start up. The "package.nw" file is very large and contains a lot of assets.
[tip]All your assets including textures, audio and code are inside the "package.nw" file.[/tip]

[b]Steps To Add/Fix/Workaround:[/b]
[ol]
[li] Go to your exported Win32/Win64 folder(s)[/li]
[li] Rename "package.nw" to "package.zip" and unzip it[/li]
[li] Rename the unzipped folder to "package.nw" and remove all the old files[/li][/ol][hr]

[h3]How To: Set Your Own Application Icon[/h3]
The game is using the default NWjs icon as the app icon.
[tip]Some systems have strict icon caching. A system reboot might be required.[/tip]

[b]Steps To Add/Fix/Workaround:[/b]
Windows only:
[ol]
[li] Convert PNG to ICO using an [url=https://www.icoconverter.com/]Online Converter[/url] [16-128px; 32bits][/li]
[li] Start [url=https://github.com/TheRealDannyyy/Construct-Nwjs-Roundup/raw/master/Assets/Reshack/Resource%20Hacker.zip]ResHack[/url][/li]
[li] Open the nw.exe file(s)[/li]
[li] Right-click on "Icon Group" and "Replace Icon"[/li]
[li] Select and replace the application icon(s)[/li]
[li] Save and remove any backup/original files if needed[/li][/ol]

MacOSX only:
[ol]
[li] Convert PNG to ICNS using an [url=https://cloudconvert.com/png-to-icns]Online Converter[/url] [128px][/li]
[li] Paste your new icon into [i]*.app/Contents/Resources[/i][/li][/ol][hr]

[h3]How To: Hide/Prevent Chrome Devtools For The End-User[/h3]
Dev-tools can be accessed by pressing "F12". Users can also access dev-tools in right click menu's or similar.
[tip]Dev-tools could allow execution of malicious code to modify your game.[/tip]

[b]Steps To Add/Fix/Workaround:[/b]

Prevent most ways to access dev-tools:
[ul][li] Add [b]--disable-devtools[/b] to the "chromium-args" properties[/li][/ul]

Completly remove dev-tools access:
[ul][li] Install the custom "Normal" build from the NWjs downloads website[/li][/ul][hr]

[h3]How To: Test Your Game On Higher Framerates Than 60FPS[/h3]
The game runs at a higher framerate than 60fps. The user's monitor runs at more than 60hz. Noticeable bugs for certain behaviors or game mechanics without dt (delta-time) in use.
[tip]V-sync is on by default and synchronizes the games framerate with your monitors refresh rate.[/tip]

[b]Steps To Add/Fix/Workaround:[/b]
Bugfix for game eventing:
[ul][li] Add missing delta time multiplications ([url=https://www.construct.net/tutorials/delta-time-and-framerate-independence-2]Tutorial ➚[/url])[/li][/ul]

Testing on higher framerates:
[ol][li] Open the "package.json" file(s)[/li]
[li] Add [b]--disable-gpu-vsync[/b] to the "chromium-args" properties[/li]
[li] Add [b]--limit-fps=X[/b] to the "chromium-args" properties ([i]X = FPS, e.g. --limit-fps=144[/i])[/li][/ol][hr]

[h3]How To: Use The Built-in NW.js FPS Counter[/h3]
Too lazy to add a simple FPS counter to the game.
[warning][b]The FPS counter[/b] might not work in combination with "--disable-gpu-vsync"![/warning]

[b]Steps To Add/Fix/Workaround:[/b]
[ol]
[li] Open the "package.json" file(s)[/li]
[li] Add [b]--show-fps-counter[/b] to the "chromium-args" properties[/li][/ol][hr]

[h3]How To: Modify/Remove Right-Click Context Menus[/h3]
Customized textboxes show a right-click menu, ruining the immersion of the game.
[tip]Below are two possible options to deal with the right-click context menus.[/tip]

[b]Steps To Add/Fix/Workaround:[/b]

Completly remove right-click menus:
[ol][li] Add the [i]browser[/i] plugin to your project[/li]
[li] Select an event which only triggers once (e.g. inside the loader layout)[/li]
[li] Add the browser action [i]execute javascript[/i][/li]
[li] Execute the following code:[/li][/ol]

[code lang="javascript"]"document.addEventListener('contextmenu', function(e){e.preventDefault();}, false);"[/code]

Leave "Cut", "Copy", "Paste" in right-click menus:
[ol][li] Add the [i]browser[/i] plugin to your project[/li]
[li] Select an event which only triggers once (e.g. inside the loader layout)[/li]
[li] Add the browser action [i]execute javascript[/i][/li]
[li] Execute the following code:[/li][/ol]

[code lang="javascript"]"var gui=require('nw.gui'),menu=new gui.Menu;menu.append(new gui.MenuItem({label:'Cut',click:function(){document.execCommand('cut')}})),menu.append(new gui.MenuItem({label:'Copy',click:function(){document.execCommand('copy')}})),menu.append(new gui.MenuItem({label:'Paste',click:function(){document.execCommand('paste')}})),document.addEventListener('contextmenu',function(a){a.preventDefault(),(a.target instanceof HTMLInputElement||a.target instanceof HTMLTextAreaElement||a.target.isContentEditable)&&menu.popup(a.x,a.y)});"[/code]
[i](Code provided by [@Colludium].)[/i][hr]

[h3]How To: Fetch & Make Use Of Command-line Arguments[/h3]
The NWjs plugin can't fetch and make use of any command-line arguments.
[warning]The example only allows the use of a single command-line argument![/warning]

[b]Steps To Add/Fix/Workaround:[/b]
[ol]
[li] [url=https://github.com/TheRealDannyyy/Construct-Nwjs-Roundup/raw/master/Assets/Fetch%20Command%20Line/NWjsCommandLine.capx]DOWNLOAD[/url] the example project[/li]
[li] Define the command-line argument (use the global variable)[/li][/ol]
[i](Example provided by [@Armaldio].)[/i][hr]
[/tab]

[tab title="NW.js - Archive"]
[h1]References [/h1]
[h3]Useful Links[/h3]
[ul]
[li]NW.js Roundup GitHub ([url=https://github.com/TheRealDannyyy/Construct-Nwjs-Roundup]Open Link ➚[/url])[/li]
[li]NW.js Main Website ([url=https://nwjs.io/]Open Link ➚[/url])[/li]
[li]NW.js Documentation ([url=http://docs.nwjs.io/en/latest/]Open Link ➚[/url])[/li]
[li]NW.js Official Build Downloads ([url=https://www.scirra.com/nwjs]Open Link ➚[/url])[/li]
[li]NW.js Custom Build Downloads ([url=https://nwjs.io/downloads/]Open Link ➚[/url])[/li]
[li]NW.js Official C3 Manual ([url=https://www.construct.net/en/make-games/manuals/construct-3/plugin-reference/nw-js]Open Link ➚[/url])[/li]
[li]NW.js Official C2 Tutorial ([url=https://www.scirra.com/tutorials/1276/exporting-desktop-apps-with-node-webkit]Open Link ➚[/url])[/li]
[li]NW.js Construct 3 Desktop ([url=https://www.construct.net/en/forum/construct-3/general-discussion-7/construct-3-desktop-build-beta-131317#forumPost923348]Open Link ➚[/url])[/li]
[li]NW.js GitHub Bugreporting ([url=https://github.com/nwjs/nw.js/issues]Open Link ➚[/url])[/li][/ul]

[h3]External Bugreports[/h3]
[ul]
[li][b]NW.js [v0.14.0rc1 - v0.19.0]:[/b] Critical Screen Flickering Bug ([url=https://github.com/nwjs/nw.js/issues/5477]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.17.5 - v0.43.0]:[/b] Window Size Bug ([url=https://github.com/nwjs/nw.js/issues/5337]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.18.1 - v0.18.4]:[/b] Gamepad API not working on Windows 10 ([url=https://github.com/nwjs/nw.js/issues/5377]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.19.0 - v0.28.0]:[/b] Mouse Pointer Problem When Right-Clicking ([url=https://github.com/nwjs/nw.js/issues/5851]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.22.0 - v0.26.0]:[/b] "--in-process-gpu" Causes Severe Problems With Application Instancing ([url=https://github.com/nwjs/nw.js/issues/6059]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.27.0 - v0.27.1]:[/b] Regression in 0.27 user agent handling breaks Construct 2 content ([url=https://github.com/nwjs/nw.js/issues/6321]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.29.0 - v0.32.0]:[/b] Custom cursor CSS not preserved in window ([url=https://github.com/nwjs/nw.js/issues/2250]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.29.0 - Before C2 r256]:[/b] passing --disable-software-rasterizer appears to disable hardware acceleration ([url=https://github.com/nwjs/nw.js/issues/6498]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.30.0 - v0.31.5]:[/b] Video Media Playback Causes Apphang/Appcrash ([url=https://github.com/nwjs/nw.js/issues/6730]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.33.0]:[/b] Gamepad API stopped working as of NW.js 0.33 ([url=https://github.com/nwjs/nw.js/issues/6792]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.41.0 - v0.42.0]:[/b] Slow Startup Performance Regression ([url=https://github.com/nwjs/nw.js/issues/7192]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.42.4 - v0.43.1]:[/b] --disable-devtools Chromium-Arg Stopped Working ([url=https://github.com/nwjs/nw.js/issues/7279]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.43.1 - v0.43.3]:[/b] [NW2] Regression in window sizing ([url=https://github.com/nwjs/nw.js/issues/7284]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.43.1 - v0.43.3]:[/b] NW2: Users can manually zoom using ALT/CTRL + Mousewheel ([url=https://github.com/nwjs/nw.js/issues/7309]Open Link ➚[/url])[/li]
[li][b]NW.js [v0.44.0 - v0.46.0]:[/b] Window bar app icon is low quality again ([url=https://github.com/nwjs/nw.js/issues/7361]Open Link ➚[/url])[/li]
[/ul]
[/tab]